{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/task.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\n\nconst _c0 = function (a1) {\n  return [\"/lists\", a1];\n};\n\nfunction TaskViewComponent_a_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 8)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const list_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(2, _c0, list_r1._id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(list_r1.title);\n  }\n}\n\nexport class TaskViewComponent {\n  constructor(taskService, route, router) {\n    this.taskService = taskService;\n    this.route = route;\n    this.router = router;\n    this.lists = [];\n    this.tasks = [];\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {// if (params.listId) {\n      //   this.selectedListId = params.listId;\n      //   this.taskService.getTasks(params.listId).subscribe((tasks: Task[]) => {\n      //     this.tasks = tasks;\n      //   })\n      // } else {\n      //   this.tasks = undefined;\n      // }\n    });\n    this.taskService.getLists().subscribe(lists => {\n      this.lists = lists;\n    });\n  }\n\n}\n\nTaskViewComponent.ɵfac = function TaskViewComponent_Factory(t) {\n  return new (t || TaskViewComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nTaskViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TaskViewComponent,\n  selectors: [[\"app-task-view\"]],\n  decls: 19,\n  vars: 1,\n  consts: [[1, \"centered-content\"], [1, \"task-manager-container\"], [1, \"sidebar\", \"has-background-white\"], [1, \"title\", \"has-text-primary\"], [1, \"list-menu\"], [\"class\", \"list-menu-item\", \"routerLinkActive\", \"is-active\", 3, \"routerLink\", 4, \"ngFor\", \"ngForOf\"], [1, \"task-list-container\", \"has-background-light\"], [1, \"task\"], [\"routerLinkActive\", \"is-active\", 1, \"list-menu-item\", 3, \"routerLink\"]],\n  template: function TaskViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n      i0.ɵɵtext(4, \"Lists\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4);\n      i0.ɵɵtemplate(6, TaskViewComponent_a_6_Template, 3, 4, \"a\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 6)(8, \"h1\", 3);\n      i0.ɵɵtext(9, \" TASKS \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 7)(11, \"p\");\n      i0.ɵɵtext(12, \"This is sjknfjsbfdskj\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 7)(14, \"p\");\n      i0.ɵɵtext(15, \"This is sjknfjsbfdskj\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 7)(17, \"p\");\n      i0.ɵɵtext(18, \"This is sjknfjsbfdskj\");\n      i0.ɵɵelementEnd()()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.lists);\n    }\n  },\n  dependencies: [i3.NgForOf, i2.RouterLinkWithHref, i2.RouterLinkActive],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 461:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\nError: Failed to find '../../../main-styles.scss'\\\\n  in [\\\\n    D:\\\\\\\\webTechProj\\\\\\\\FPL\\\\\\\\src\\\\\\\\app\\\\\\\\MyComponents\\\\\\\\task-view\\\\n  ]\\\\n    at D:\\\\\\\\webTechProj\\\\\\\\FPL\\\\\\\\node_modules\\\\\\\\postcss-import\\\\\\\\lib\\\\\\\\resolve-id.js:35:13\\\\n    at async Promise.all (index 0)\\\\n    at async LazyResult.runAsync (D:\\\\\\\\webTechProj\\\\\\\\FPL\\\\\\\\node_modules\\\\\\\\postcss\\\\\\\\lib\\\\\\\\lazy-result.js:396:11)\\\\n    at async Object.loader (D:\\\\\\\\webTechProj\\\\\\\\FPL\\\\\\\\node_modules\\\\\\\\postcss-loader\\\\\\\\dist\\\\\\\\index.js:95:14)\\\");\\n\\n })\\n\\n \\t});\\n\\n \\t\\n \\t// startup\\n \\t// Load entry module and return exports\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n \\tvar __webpack_exports__ = {};\\n \\t__webpack_modules__[461]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\\n/*# sourceMappingURL=task-view.component.css.map*/\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;;IAMQA,6BAKC,CALD,EAKC,GALD;IAMKA;IAAgBA;;;;;IAHnBA;IAGGA;IAAAA;;;;ACAb,OAAM,MAAOC,iBAAP,CAAwB;EAO5BC,YAAoBC,WAApB,EAAsDC,KAAtD,EAAqFC,MAArF,EAAmG;IAA/E;IAAkC;IAA+B;IALrF,aAAgB,EAAhB;IACA,aAAgB,EAAhB;EAIwG;;EAExGC,QAAQ;IACN,KAAKF,KAAL,CAAWG,MAAX,CAAkBC,SAAlB,CACGD,MAAD,IAAmB,CACjB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACD,CAVH;IAaA,KAAKJ,WAAL,CAAiBM,QAAjB,GAA4BD,SAA5B,CAAuCE,KAAD,IAAe;MACnD,KAAKA,KAAL,GAAaA,KAAb;IACD,CAFD;EAID;;AA3B2B;;;mBAAjBT,mBAAiBD;AAAA;;;QAAjBC;EAAiBU;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDZ9Bf,+BAA8B,CAA9B,EAA8B,KAA9B,EAA8B,CAA9B,EAA8B,CAA9B,EAA8B,KAA9B,EAA8B,CAA9B,EAA8B,CAA9B,EAA8B,IAA9B,EAA8B,CAA9B;MAGyCA;MAAKA;MAExCA;MACEA;MAQFA;MAOFA,+BAAsD,CAAtD,EAAsD,IAAtD,EAAsD,CAAtD;MAEQA;MACJA;MAEAA,gCAAkB,EAAlB,EAAkB,GAAlB;MACOA;MAAqBA;MAE5BA,gCAAkB,EAAlB,EAAkB,GAAlB;MACOA;MAAqBA;MAE5BA,gCAAkB,EAAlB,EAAkB,GAAlB;MACOA;MAAqBA;;;;MAzBTA;MAAAA","names":["i0","TaskViewComponent","constructor","taskService","route","router","ngOnInit","params","subscribe","getLists","lists","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\webTechProj\\FPL\\src\\app\\MyComponents\\task-view\\task-view.component.html","D:\\webTechProj\\FPL\\src\\app\\MyComponents\\task-view\\task-view.component.ts"],"sourcesContent":["<div class=\"centered-content\">\n  <div class=\"task-manager-container\">\n    <div class=\"sidebar has-background-white\">\n      <h1 class=\"title has-text-primary\">Lists</h1>\n\n      <div class=\"list-menu\">\n        <a\n          class=\"list-menu-item\"\n          *ngFor=\"let list of lists\"\n          [routerLink]=\"['/lists', list._id]\"\n          routerLinkActive=\"is-active\"\n        >\n          <p>{{ list.title }}</p>\n        </a>\n      </div>\n\n      <!-- <button class=\"button is-primary has-text-white\" routerLink=\"/new-list\">\n        + New List\n      </button> -->\n    </div>\n\n    <div class=\"task-list-container has-background-light\">\n        <h1 class=\"title has-text-primary\">\n            TASKS\n        </h1>\n\n        <div class=\"task\">\n            <p>This is sjknfjsbfdskj</p>\n        </div>\n        <div class=\"task\">\n            <p>This is sjknfjsbfdskj</p>\n        </div>\n        <div class=\"task\">\n            <p>This is sjknfjsbfdskj</p>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { TaskService } from 'src/app/task.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Task } from 'src/app/models/task.model';\nimport { List } from 'src/app/models/list.model';\n\n\n@Component({\n  selector: 'app-task-view',\n  templateUrl: './task-view.component.html',\n  styleUrls: ['./task-view.component.css']\n})\nexport class TaskViewComponent implements OnInit {\n\n  lists: List[] = [];\n  tasks: Task[] = [];\n\n  selectedListId!: string;\n\n  constructor(private taskService: TaskService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(\n      (params: Params) => {\n        // if (params.listId) {\n        //   this.selectedListId = params.listId;\n        //   this.taskService.getTasks(params.listId).subscribe((tasks: Task[]) => {\n        //     this.tasks = tasks;\n        //   })\n        // } else {\n        //   this.tasks = undefined;\n        // }\n      }\n    )\n\n    this.taskService.getLists().subscribe((lists: any) => {\n      this.lists = lists;\n    })\n    \n  }\n\n  // onTaskClick(task: Task) {\n  //   // we want to set the task to completed\n  //   this.taskService.complete(task).subscribe(() => {\n  //     // the task has been set to completed successfully\n  //     console.log(\"Completed successully!\");\n  //     task.completed = !task.completed;\n  //   })\n  // }\n\n  // onDeleteListClick() {\n  //   this.taskService.deleteList(this.selectedListId).subscribe((res: any) => {\n  //     this.router.navigate(['/lists']);\n  //     console.log(res);\n  //   })\n  // }\n\n  // onDeleteTaskClick(id: string) {\n  //   this.taskService.deleteTask(this.selectedListId, id).subscribe((res: any) => {\n  //     this.tasks = this.tasks.filter(val => val._id !== id);\n  //     console.log(res);\n  //   })\n  // }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}