{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/task.service\";\nimport * as i2 from \"src/app/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\n\nconst _c0 = function (a1) {\n  return [\"/lists\", a1];\n};\n\nfunction ProfileComponent_a_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 11)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const list_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(2, _c0, list_r3._id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(list_r3.title);\n  }\n}\n\nconst _c1 = function (a1) {\n  return [\"/edit-list\", a1];\n};\n\nfunction ProfileComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 12)(2, \"h1\", 3);\n    i0.ɵɵtext(3, \"Tasks\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 13)(5, \"div\", 14)(6, \"button\", 15)(7, \"span\", 16);\n    i0.ɵɵelement(8, \"i\", 17);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"div\", 18)(10, \"div\", 19)(11, \"a\", 20);\n    i0.ɵɵtext(12, \" Edit \");\n    i0.ɵɵelementEnd()()()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(1, _c1, ctx_r1.selectedListId));\n  }\n}\n\nfunction ProfileComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\", 21);\n    i0.ɵɵtext(2, \"Please select a list from the sidebar\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nexport class ProfileComponent {\n  constructor(taskService, authService, route, router) {\n    this.taskService = taskService;\n    this.authService = authService;\n    this.route = route;\n    this.router = router;\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      if (params['profileID']) {\n        this.selectedListId = params['profileID'];\n        this.taskService.getTasks(params['profileID']).subscribe(tasks => {\n          console.log(tasks);\n          this.tasks = tasks;\n        });\n      } else {\n        this.tasks = undefined;\n      }\n    });\n    this.taskService.getLists().subscribe(lists => {\n      this.lists = lists;\n    });\n  }\n\n  deleteList() {\n    this.taskService.deleteList(this.selectedListId).subscribe(res => {\n      this.router.navigate(['/profile']);\n      console.log(res);\n    });\n  }\n\n  deleteTask(id) {\n    this.taskService.deleteTask(this.selectedListId, id).subscribe(res => {\n      this.tasks = this.tasks.filter(val => val._id != id);\n      console.log(res);\n    });\n  }\n\n  LogOut() {\n    this.authService.logout();\n  }\n\n}\n\nProfileComponent.ɵfac = function ProfileComponent_Factory(t) {\n  return new (t || ProfileComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n};\n\nProfileComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProfileComponent,\n  selectors: [[\"app-profile\"]],\n  decls: 14,\n  vars: 3,\n  consts: [[1, \"centered-content\"], [1, \"task-manager-container\"], [1, \"sidebar\", \"has-background-white\"], [1, \"title\", \"has-text-primary\"], [1, \"list-menu\"], [\"class\", \"list-menu-item\", \"routerLinkActive\", \"is-active\", 3, \"routerLink\", 4, \"ngFor\", \"ngForOf\"], [\"routerLink\", \"/new-list\", 1, \"button\", \"is-primary\", \"has-text-white\"], [1, \"task-list-container\", \"has-background-light\"], [4, \"ngIf\"], [\"routerLink\", \"./new-task\", 1, \"circle-add-button\", \"button\", \"is-primary\"], [\"src\", \"../../../assets/plus-icon.svg\", 1, \"has-text-white\"], [\"routerLinkActive\", \"is-active\", 1, \"list-menu-item\", 3, \"routerLink\"], [1, \"top-bar\"], [1, \"dropdown\", \"is-hoverable\", \"is-right\"], [1, \"dropdown-trigger\"], [\"aria-haspopup\", \"true\", \"aria-controls\", \"dropdown-menu4\", 1, \"button\"], [1, \"icon\", \"is-small\"], [\"aria-hidden\", \"true\", 1, \"fas\", \"fa-cog\"], [\"id\", \"dropdown-menu4\", \"role\", \"menu\", 1, \"dropdown-menu\"], [1, \"dropdown-content\"], [1, \"dropdown-item\", 3, \"routerLink\"], [1, \"empty-state-text\"]],\n  template: function ProfileComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n      i0.ɵɵtext(4, \"Lists\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4);\n      i0.ɵɵtemplate(6, ProfileComponent_a_6_Template, 3, 4, \"a\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 6);\n      i0.ɵɵtext(8, \" + New List \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 7);\n      i0.ɵɵtemplate(10, ProfileComponent_div_10_Template, 13, 3, \"div\", 8);\n      i0.ɵɵelementStart(11, \"button\", 9);\n      i0.ɵɵelement(12, \"img\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(13, ProfileComponent_div_13_Template, 3, 0, \"div\", 8);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.lists);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.tasks);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.tasks);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i3.RouterLink, i3.RouterLinkWithHref, i3.RouterLinkActive],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 65:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\nError: Failed to find '../../../main-styles.scss'\\\\n  in [\\\\n    D:\\\\\\\\webTechProj\\\\\\\\FPL\\\\\\\\src\\\\\\\\app\\\\\\\\MyComponents\\\\\\\\profile\\\\n  ]\\\\n    at D:\\\\\\\\webTechProj\\\\\\\\FPL\\\\\\\\node_modules\\\\\\\\postcss-import\\\\\\\\lib\\\\\\\\resolve-id.js:35:13\\\\n    at async Promise.all (index 0)\\\\n    at async LazyResult.runAsync (D:\\\\\\\\webTechProj\\\\\\\\FPL\\\\\\\\node_modules\\\\\\\\postcss\\\\\\\\lib\\\\\\\\lazy-result.js:396:11)\\\\n    at async Object.loader (D:\\\\\\\\webTechProj\\\\\\\\FPL\\\\\\\\node_modules\\\\\\\\postcss-loader\\\\\\\\dist\\\\\\\\index.js:95:14)\\\");\\n\\n })\\n\\n \\t});\\n\\n \\t\\n \\t// startup\\n \\t// Load entry module and return exports\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n \\tvar __webpack_exports__ = {};\\n \\t__webpack_modules__[65]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\\n/*# sourceMappingURL=profile.component.css.map*/\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;;;IAMQA,8BAKC,CALD,EAKC,GALD;IAMKA;IAAgBA;;;;;IAHnBA;IAGGA;IAAAA;;;;;;;;;;IAUPA,4BAAmB,CAAnB,EAAmB,KAAnB,EAAmB,EAAnB,EAAmB,CAAnB,EAAmB,IAAnB,EAAmB,CAAnB;IAEuCA;IAAKA;IACxCA,gCAA4C,CAA5C,EAA4C,KAA5C,EAA4C,EAA5C,EAA4C,CAA5C,EAA4C,QAA5C,EAA4C,EAA5C,EAA4C,CAA5C,EAA4C,MAA5C,EAA4C,EAA5C;IAQQA;IACFA;IAGJA,gCAA2D,EAA3D,EAA2D,KAA3D,EAA2D,EAA3D,EAA2D,EAA3D,EAA2D,GAA3D,EAA2D,EAA3D;IAMMA;IACFA;;;;;IAJEA;IAAAA;;;;;;IA8CdA,4BAAoB,CAApB,EAAoB,IAApB,EAAoB,EAApB;IAC+BA;IAAqCA;;;;AC3ExE,OAAM,MAAOC,gBAAP,CAAuB;EAM3BC,YACUC,WADV,EAEUC,WAFV,EAGUC,KAHV,EAIUC,MAJV,EAIyB;IAHf;IACA;IACA;IACA;EAEN;;EAEJC,QAAQ;IACN,KAAKF,KAAL,CAAWG,MAAX,CAAkBC,SAAlB,CAA6BD,MAAD,IAAmB;MAC7C,IAAIA,MAAM,CAAC,WAAD,CAAV,EAAyB;QACvB,KAAKE,cAAL,GAAsBF,MAAM,CAAC,WAAD,CAA5B;QACA,KAAKL,WAAL,CACGQ,QADH,CACYH,MAAM,CAAC,WAAD,CADlB,EAEGC,SAFH,CAEcG,KAAD,IAAe;UACxBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;UACA,KAAKA,KAAL,GAAaA,KAAb;QACD,CALH;MAMD,CARD,MAQO;QACL,KAAKA,KAAL,GAAaG,SAAb;MACD;IACF,CAZD;IAcA,KAAKZ,WAAL,CAAiBa,QAAjB,GAA4BP,SAA5B,CAAuCQ,KAAD,IAAe;MACnD,KAAKA,KAAL,GAAaA,KAAb;IACD,CAFD;EAGD;;EAEDC,UAAU;IACR,KAAKf,WAAL,CAAiBe,UAAjB,CAA4B,KAAKR,cAAjC,EAAiDD,SAAjD,CAA4DU,GAAD,IAAc;MACvE,KAAKb,MAAL,CAAYc,QAAZ,CAAqB,CAAC,UAAD,CAArB;MACAP,OAAO,CAACC,GAAR,CAAYK,GAAZ;IACD,CAHD;EAID;;EAEDE,UAAU,CAACC,EAAD,EAAY;IACpB,KAAKnB,WAAL,CAAiBkB,UAAjB,CAA4B,KAAKX,cAAjC,EAAgDY,EAAhD,EAAoDb,SAApD,CAA+DU,GAAD,IAAc;MAC1E,KAAKP,KAAL,GAAa,KAAKA,KAAL,CAAYW,MAAZ,CAAmBC,GAAG,IAAIA,GAAG,CAACC,GAAJ,IAAWH,EAArC,CAAb;MACAT,OAAO,CAACC,GAAR,CAAYK,GAAZ;IACD,CAHD;EAID;;EAEDO,MAAM;IAEJ,KAAKtB,WAAL,CAAiBuB,MAAjB;EACD;;AAnD0B;;;mBAAhB1B,kBAAgBD;AAAA;;;QAAhBC;EAAgB2B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDZ7BhC,+BAA8B,CAA9B,EAA8B,KAA9B,EAA8B,CAA9B,EAA8B,CAA9B,EAA8B,KAA9B,EAA8B,CAA9B,EAA8B,CAA9B,EAA8B,IAA9B,EAA8B,CAA9B;MAGyCA;MAAKA;MAExCA;MACEA;MAQFA;MAEAA;MACEA;MACFA;MAGFA;MACEA;MAwDAA;MAIEA;MACFA;MAGFA;MAGFA;;;;MAjFyBA;MAAAA;MAcfA;MAAAA;MAgEFA;MAAAA","names":["i0","ProfileComponent","constructor","taskService","authService","route","router","ngOnInit","params","subscribe","selectedListId","getTasks","tasks","console","log","undefined","getLists","lists","deleteList","res","navigate","deleteTask","id","filter","val","_id","LogOut","logout","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\webTechProj\\FPL\\src\\app\\MyComponents\\profile\\profile.component.html","D:\\webTechProj\\FPL\\src\\app\\MyComponents\\profile\\profile.component.ts"],"sourcesContent":["<div class=\"centered-content\">\r\n  <div class=\"task-manager-container\">\r\n    <div class=\"sidebar has-background-white\">\r\n      <h1 class=\"title has-text-primary\">Lists</h1>\r\n\r\n      <div class=\"list-menu\">\r\n        <a\r\n          class=\"list-menu-item\"\r\n          *ngFor=\"let list of lists\"\r\n          [routerLink]=\"['/lists', list._id]\"\r\n          routerLinkActive=\"is-active\"\r\n        >\r\n          <p>{{ list.title }}</p>\r\n        </a>\r\n      </div>\r\n\r\n      <button class=\"button is-primary has-text-white\" routerLink=\"/new-list\">\r\n        + New List\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"task-list-container has-background-light\">\r\n      <div *ngIf=\"tasks\">\r\n        <div class=\"top-bar\">\r\n          <h1 class=\"title has-text-primary\">Tasks</h1>\r\n          <div class=\"dropdown is-hoverable is-right\">\r\n            <div class=\"dropdown-trigger\">\r\n              <button\r\n                class=\"button\"\r\n                aria-haspopup=\"true\"\r\n                aria-controls=\"dropdown-menu4\"\r\n              >\r\n                <span class=\"icon is-small\">\r\n                  <i class=\"fas fa-cog\" aria-hidden=\"true\"></i>\r\n                </span>\r\n              </button>\r\n            </div>\r\n            <div class=\"dropdown-menu\" id=\"dropdown-menu4\" role=\"menu\">\r\n              <div class=\"dropdown-content\">\r\n                <a\r\n                  [routerLink]=\"['/edit-list', selectedListId]\"\r\n                  class=\"dropdown-item\"\r\n                >\r\n                  Edit\r\n                </a>\r\n                <!-- <a (click)=\"onDeleteListClick()\" class=\"dropdown-item has-text-danger\">\r\n                  Delete\r\n                </a> -->\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Task Elements -->\r\n        <!-- <div class=\"task\" *ngFor=\"let task of tasks\" (click)=\"onTaskClick(task)\" [ngClass]=\"{ 'completed': task.completed }\">\r\n          <div class=\"task-text\">\r\n            <p>{{ task.title }}</p>\r\n          </div>\r\n          <div class=\"task-buttons\">\r\n\r\n            <button class=\"button\" [routerLink]=\"['/lists', selectedListId, 'edit-task', task._id]\">\r\n              <div class=\"icon\">\r\n                <i class=\"fas fa-edit\"></i>\r\n              </div>\r\n            </button>\r\n\r\n            <button class=\"button is-danger\" (click)=\"onDeleteTaskClick(task._id)\" style=\"margin-left: 10px;\">\r\n              <div class=\"icon\">\r\n                <i class=\"fas fa-trash\"></i>\r\n              </div>\r\n            </button>\r\n\r\n          </div> -->\r\n      </div>\r\n\r\n      <!-- <h3 class=\"empty-state-text\" *ngIf=\"tasks.length === 0\">There are no tasks here! Click the add button to create\r\n          a new task.</h3> -->\r\n\r\n      <button\r\n        routerLink=\"./new-task\"\r\n        class=\"circle-add-button button is-primary\"\r\n      >\r\n        <img src=\"../../../assets/plus-icon.svg\" class=\"has-text-white\" />\r\n      </button>\r\n    </div>\r\n\r\n    <div *ngIf=\"!tasks\">\r\n      <h3 class=\"empty-state-text\">Please select a list from the sidebar</h3>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TaskService } from 'src/app/task.service';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { List } from 'src/app/models/list.model';\r\nimport { Task } from 'src/app/models/task.model';\r\nimport { AuthService } from 'src/app/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css'],\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  lists?: List[];\r\n  tasks?: Task[];\r\n\r\n  selectedListId!: string;\r\n\r\n  constructor(\r\n    private taskService: TaskService,\r\n    private authService: AuthService,\r\n    private route: ActivatedRoute,\r\n    private router : Router\r\n\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe((params: Params) => {\r\n      if (params['profileID']) {\r\n        this.selectedListId = params['profileID'];\r\n        this.taskService\r\n          .getTasks(params['profileID'])\r\n          .subscribe((tasks: any) => {\r\n            console.log(tasks);\r\n            this.tasks = tasks;\r\n          });\r\n      } else {\r\n        this.tasks = undefined;\r\n      }\r\n    });\r\n\r\n    this.taskService.getLists().subscribe((lists: any) => {\r\n      this.lists = lists;\r\n    });\r\n  }\r\n\r\n  deleteList() {\r\n    this.taskService.deleteList(this.selectedListId).subscribe((res : any) => {\r\n      this.router.navigate(['/profile'])\r\n      console.log(res);\r\n    });\r\n  }\r\n\r\n  deleteTask(id : string) {\r\n    this.taskService.deleteTask(this.selectedListId,id).subscribe((res : any) => {\r\n      this.tasks = this.tasks!.filter(val => val._id != id );\r\n      console.log(res);\r\n    });\r\n  }\r\n\r\n  LogOut()\r\n  {\r\n    this.authService.logout();\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}